cmake_minimum_required(VERSION 3.5)
project(yolov5_tensorrt)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(cv_bridge REQUIRED)
find_package(target_bbox_msgs REQUIRED)
find_package(OpenCV REQUIRED)
find_package(CUDA REQUIRED)
# find_package(rosidl_default_generators REQUIRED)

include_directories(include 
  ${PROJECT_SOURCE_DIR}/include
  ${OpenCV_INCLUDE_DIRS}
  /usr/local/cuda/include
  )
  
link_directories(
  /usr/local/cuda/lib64
  /usr/local/lib/tensorrt
  )
file(GLOB_RECURSE SOURCES_DIRS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS src/*.cpp)

cuda_add_library(myplugins SHARED ${PROJECT_SOURCE_DIR}/src/yololayer.cu)
target_link_libraries(myplugins nvinfer cudart)

add_executable(${PROJECT_NAME}  ${SOURCES_DIRS})
ament_target_dependencies(${PROJECT_NAME} rclcpp sensor_msgs cv_bridge target_bbox_msgs OpenCV CUDA)
target_include_directories(${PROJECT_NAME} PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)

target_link_libraries(${PROJECT_NAME} myplugins)

install(TARGETS ${PROJECT_NAME}
  DESTINATION lib/${PROJECT_NAME})
# install(TARGETS myplugins
#   DESTINATION lib/${PROJECT_NAME})
install(FILES launch/yolov5_tensorrt_launch.py
  DESTINATION share/${PROJECT_NAME}/launch)
install(FILES configs/config.yaml
  DESTINATION share/${PROJECT_NAME}/configs)
install(FILES weights/yolov5x.engine
  DESTINATION share/${PROJECT_NAME}/weights)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
